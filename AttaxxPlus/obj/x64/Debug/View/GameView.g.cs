#pragma checksum "C:\Users\novoz\git-repos\LAB10_AttaxPlus\AttaxxPlus\View\GameView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "92C70627275CC4FAA363D0C6D736A6D2A5A68AD013216EED577A062967B3FAB3"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttaxxPlus.View
{
    partial class GameView : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Panel_Background(global::Windows.UI.Xaml.Controls.Panel obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Background(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_BorderBrush(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.BorderBrush = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class GameView_obj6_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGameView_Bindings
        {
            private global::AttaxxPlus.Boosters.IBooster dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj6;
            private global::Windows.UI.Xaml.Controls.Image obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj6CommandDisabled = false;
            private static bool isobj7SourceDisabled = false;
            private static bool isobj8TextDisabled = false;

            private GameView_obj6_BindingsTracking bindingsTracking;

            public GameView_obj6_Bindings()
            {
                this.bindingsTracking = new GameView_obj6_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 59 && columnNumber == 33)
                {
                    isobj6CommandDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 63)
                {
                    isobj7SourceDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 44)
                {
                    isobj8TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // View\GameView.xaml line 59
                        this.obj6 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Button)target);
                        break;
                    case 7: // View\GameView.xaml line 62
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 8: // View\GameView.xaml line 63
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj6.Target as global::Windows.UI.Xaml.Controls.Button).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::AttaxxPlus.Boosters.IBooster) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IGameView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::AttaxxPlus.Boosters.IBooster)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AttaxxPlus.Boosters.IBooster obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                        this.Update_Title(obj.Title, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\GameView.xaml line 59
                    if (!isobj6CommandDisabled)
                    {
                        if ((this.obj6.Target as global::Windows.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command((this.obj6.Target as global::Windows.UI.Xaml.Controls.Button), obj, null);
                        }
                    }
                }
            }
            private void Update_Image(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 62
                    if (!isobj7SourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj7, obj, null);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 63
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class GameView_obj6_BindingsTracking
            {
                private global::System.WeakReference<GameView_obj6_Bindings> weakRefToBindingObj; 

                public GameView_obj6_BindingsTracking(GameView_obj6_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<GameView_obj6_Bindings>(obj);
                }

                public GameView_obj6_Bindings TryGetBindingObject()
                {
                    GameView_obj6_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GameView_obj6_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttaxxPlus.Boosters.IBooster obj = sender as global::AttaxxPlus.Boosters.IBooster;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Image(obj.Image, DATA_CHANGED);
                                bindings.Update_Title(obj.Title, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Image":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Image(obj.Image, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::AttaxxPlus.Boosters.IBooster obj)
                {
                    GameView_obj6_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class GameView_obj12_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGameView_Bindings
        {
            private global::AttaxxPlus.ViewModel.FieldViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj12CommandDisabled = false;
            private static bool isobj12CommandParameterDisabled = false;
            private static bool isobj12BackgroundDisabled = false;
            private static bool isobj12BorderBrushDisabled = false;

            private GameView_obj12_BindingsTracking bindingsTracking;

            public GameView_obj12_Bindings()
            {
                this.bindingsTracking = new GameView_obj12_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 39 && columnNumber == 45)
                {
                    isobj12CommandDisabled = true;
                }
                else if (lineNumber == 39 && columnNumber == 90)
                {
                    isobj12CommandParameterDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 45)
                {
                    isobj12BackgroundDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 45)
                {
                    isobj12BorderBrushDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 12: // View\GameView.xaml line 39
                        this.obj12 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Button)target);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj12.Target as global::Windows.UI.Xaml.Controls.Button).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::AttaxxPlus.ViewModel.FieldViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IGameView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::AttaxxPlus.ViewModel.FieldViewModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AttaxxPlus.ViewModel.FieldViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FieldCommand(obj.FieldCommand, phase);
                        this.Update_Owner(obj.Owner, phase);
                        this.Update_IsSelected(obj.IsSelected, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\GameView.xaml line 39
                    if (!isobj12CommandParameterDisabled)
                    {
                        if ((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button), obj, null);
                        }
                    }
                }
            }
            private void Update_FieldCommand(global::AttaxxPlus.ViewModel.FieldCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 39
                    if (!isobj12CommandDisabled)
                    {
                        if ((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button), obj, null);
                        }
                    }
                }
            }
            private void Update_Owner(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 39
                    if (!isobj12BackgroundDisabled)
                    {
                        if ((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button), (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("OwnerIndex2BrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                        }
                    }
                }
            }
            private void Update_IsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 39
                    if (!isobj12BorderBrushDisabled)
                    {
                        if ((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_BorderBrush((this.obj12.Target as global::Windows.UI.Xaml.Controls.Button), (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("IsSelected2BrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class GameView_obj12_BindingsTracking
            {
                private global::System.WeakReference<GameView_obj12_Bindings> weakRefToBindingObj; 

                public GameView_obj12_BindingsTracking(GameView_obj12_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<GameView_obj12_Bindings>(obj);
                }

                public GameView_obj12_Bindings TryGetBindingObject()
                {
                    GameView_obj12_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GameView_obj12_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttaxxPlus.ViewModel.FieldViewModel obj = sender as global::AttaxxPlus.ViewModel.FieldViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_FieldCommand(obj.FieldCommand, DATA_CHANGED);
                                bindings.Update_Owner(obj.Owner, DATA_CHANGED);
                                bindings.Update_IsSelected(obj.IsSelected, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "FieldCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FieldCommand(obj.FieldCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Owner":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Owner(obj.Owner, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsSelected(obj.IsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::AttaxxPlus.ViewModel.FieldViewModel obj)
                {
                    GameView_obj12_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class GameView_obj10_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGameView_Bindings
        {
            private global::AttaxxPlus.ViewModel.FieldViewModelList dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj10;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj10ItemsSourceDisabled = false;

            private GameView_obj10_BindingsTracking bindingsTracking;

            public GameView_obj10_Bindings()
            {
                this.bindingsTracking = new GameView_obj10_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 35 && columnNumber == 39)
                {
                    isobj10ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 10: // View\GameView.xaml line 35
                        this.obj10 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.ItemsControl)target);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj10.Target as global::Windows.UI.Xaml.Controls.ItemsControl).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::AttaxxPlus.ViewModel.FieldViewModelList) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IGameView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::AttaxxPlus.ViewModel.FieldViewModelList)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AttaxxPlus.ViewModel.FieldViewModelList obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 35
                    if (!isobj10ItemsSourceDisabled)
                    {
                        if ((this.obj10.Target as global::Windows.UI.Xaml.Controls.ItemsControl) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource((this.obj10.Target as global::Windows.UI.Xaml.Controls.ItemsControl), obj, null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class GameView_obj10_BindingsTracking
            {
                private global::System.WeakReference<GameView_obj10_Bindings> weakRefToBindingObj; 

                public GameView_obj10_BindingsTracking(GameView_obj10_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<GameView_obj10_Bindings>(obj);
                }

                public GameView_obj10_Bindings TryGetBindingObject()
                {
                    GameView_obj10_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GameView_obj10_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttaxxPlus.ViewModel.FieldViewModelList obj = sender as global::AttaxxPlus.ViewModel.FieldViewModelList;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    GameView_obj10_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::AttaxxPlus.ViewModel.FieldViewModelList obj = sender as global::AttaxxPlus.ViewModel.FieldViewModelList;
                    }
                }
                public void UpdateChildListeners_(global::AttaxxPlus.ViewModel.FieldViewModelList obj)
                {
                    GameView_obj10_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)bindings.dataRoot).CollectionChanged -= CollectionChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class GameView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGameView_Bindings
        {
            private global::AttaxxPlus.View.GameView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.StackPanel obj2;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj3;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj4;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2BackgroundDisabled = false;
            private static bool isobj3ItemsSourceDisabled = false;
            private static bool isobj4ItemsSourceDisabled = false;

            private GameView_obj1_BindingsTracking bindingsTracking;

            public GameView_obj1_Bindings()
            {
                this.bindingsTracking = new GameView_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 21 && columnNumber == 17)
                {
                    isobj2BackgroundDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 17)
                {
                    isobj3ItemsSourceDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 21)
                {
                    isobj4ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // View\GameView.xaml line 20
                        this.obj2 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 3: // View\GameView.xaml line 24
                        this.obj3 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    case 4: // View\GameView.xaml line 50
                        this.obj4 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IGameView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::AttaxxPlus.View.GameView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AttaxxPlus.View.GameView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::AttaxxPlus.ViewModel.GameViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentPlayer(obj.CurrentPlayer, phase);
                        this.Update_ViewModel_Fields(obj.Fields, phase);
                        this.Update_ViewModel_BoosterListViewModel(obj.BoosterListViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel_CurrentPlayer(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 20
                    if (!isobj2BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj2, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("OwnerIndex2BrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_Fields(global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.ViewModel.FieldViewModelList> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Fields(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 24
                    if (!isobj3ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_BoosterListViewModel(global::AttaxxPlus.ViewModel.BoosterListViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_BoosterListViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_BoosterListViewModel_Boosters(obj.Boosters, phase);
                    }
                }
            }
            private void Update_ViewModel_BoosterListViewModel_Boosters(global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.Boosters.IBooster> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_BoosterListViewModel_Boosters(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\GameView.xaml line 50
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class GameView_obj1_BindingsTracking
            {
                private global::System.WeakReference<GameView_obj1_Bindings> weakRefToBindingObj; 

                public GameView_obj1_BindingsTracking(GameView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<GameView_obj1_Bindings>(obj);
                }

                public GameView_obj1_Bindings TryGetBindingObject()
                {
                    GameView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Fields(null);
                    UpdateChildListeners_ViewModel_BoosterListViewModel(null);
                    UpdateChildListeners_ViewModel_BoosterListViewModel_Boosters(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GameView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttaxxPlus.ViewModel.GameViewModel obj = sender as global::AttaxxPlus.ViewModel.GameViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentPlayer(obj.CurrentPlayer, DATA_CHANGED);
                                bindings.Update_ViewModel_Fields(obj.Fields, DATA_CHANGED);
                                bindings.Update_ViewModel_BoosterListViewModel(obj.BoosterListViewModel, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CurrentPlayer":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentPlayer(obj.CurrentPlayer, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Fields":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Fields(obj.Fields, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "BoosterListViewModel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_BoosterListViewModel(obj.BoosterListViewModel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AttaxxPlus.ViewModel.GameViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::AttaxxPlus.ViewModel.GameViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Fields(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GameView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.ViewModel.FieldViewModelList> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.ViewModel.FieldViewModelList>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Fields(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    GameView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.ViewModel.FieldViewModelList> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.ViewModel.FieldViewModelList>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.ViewModel.FieldViewModelList> cache_ViewModel_Fields = null;
                public void UpdateChildListeners_ViewModel_Fields(global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.ViewModel.FieldViewModelList> obj)
                {
                    if (obj != cache_ViewModel_Fields)
                    {
                        if (cache_ViewModel_Fields != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Fields).PropertyChanged -= PropertyChanged_ViewModel_Fields;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Fields).CollectionChanged -= CollectionChanged_ViewModel_Fields;
                            cache_ViewModel_Fields = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Fields = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Fields;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Fields;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_BoosterListViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GameView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AttaxxPlus.ViewModel.BoosterListViewModel obj = sender as global::AttaxxPlus.ViewModel.BoosterListViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_BoosterListViewModel_Boosters(obj.Boosters, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Boosters":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_BoosterListViewModel_Boosters(obj.Boosters, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AttaxxPlus.ViewModel.BoosterListViewModel cache_ViewModel_BoosterListViewModel = null;
                public void UpdateChildListeners_ViewModel_BoosterListViewModel(global::AttaxxPlus.ViewModel.BoosterListViewModel obj)
                {
                    if (obj != cache_ViewModel_BoosterListViewModel)
                    {
                        if (cache_ViewModel_BoosterListViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_BoosterListViewModel).PropertyChanged -= PropertyChanged_ViewModel_BoosterListViewModel;
                            cache_ViewModel_BoosterListViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_BoosterListViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_BoosterListViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_BoosterListViewModel_Boosters(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GameView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.Boosters.IBooster> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.Boosters.IBooster>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_BoosterListViewModel_Boosters(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    GameView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.Boosters.IBooster> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.Boosters.IBooster>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.Boosters.IBooster> cache_ViewModel_BoosterListViewModel_Boosters = null;
                public void UpdateChildListeners_ViewModel_BoosterListViewModel_Boosters(global::System.Collections.ObjectModel.ObservableCollection<global::AttaxxPlus.Boosters.IBooster> obj)
                {
                    if (obj != cache_ViewModel_BoosterListViewModel_Boosters)
                    {
                        if (cache_ViewModel_BoosterListViewModel_Boosters != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_BoosterListViewModel_Boosters).PropertyChanged -= PropertyChanged_ViewModel_BoosterListViewModel_Boosters;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_BoosterListViewModel_Boosters).CollectionChanged -= CollectionChanged_ViewModel_BoosterListViewModel_Boosters;
                            cache_ViewModel_BoosterListViewModel_Boosters = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_BoosterListViewModel_Boosters = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_BoosterListViewModel_Boosters;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_BoosterListViewModel_Boosters;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 3: // View\GameView.xaml line 24
                {
                    this.GameField = (global::Windows.UI.Xaml.Controls.ItemsControl)(target);
                }
                break;
            case 4: // View\GameView.xaml line 50
                {
                    this.BoosterPanel = (global::Windows.UI.Xaml.Controls.ItemsControl)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\GameView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    GameView_obj1_Bindings bindings = new GameView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 6: // View\GameView.xaml line 59
                {                    
                    global::Windows.UI.Xaml.Controls.Button element6 = (global::Windows.UI.Xaml.Controls.Button)target;
                    GameView_obj6_Bindings bindings = new GameView_obj6_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element6.DataContext);
                    element6.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element6, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element6, bindings);
                }
                break;
            case 10: // View\GameView.xaml line 35
                {                    
                    global::Windows.UI.Xaml.Controls.ItemsControl element10 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                    GameView_obj10_Bindings bindings = new GameView_obj10_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element10.DataContext);
                    element10.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element10, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element10, bindings);
                }
                break;
            case 12: // View\GameView.xaml line 39
                {                    
                    global::Windows.UI.Xaml.Controls.Button element12 = (global::Windows.UI.Xaml.Controls.Button)target;
                    GameView_obj12_Bindings bindings = new GameView_obj12_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element12.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element12.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element12, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element12, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

